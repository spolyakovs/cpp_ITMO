#include <sstream>

std::stringstream ss; (прочитать про потоки C++, но там капец)

>> - вытащить из потока
<< - затаскивает в поток

ss << a << b

std::cerr << text (альтернаива cout, но точно выведется, даже если прога крашнулась)
std::cout << text
std::cin >> text

std::ifstream input("filename")
std::ofstream output("filename")

КЛАССЫ

3 типа протекции полей класса:
public (все), private (только этот класс) and protected (этот класс и его дочерние классы)

int operator [] (int a){

}
можно переопределить все, кроме & и .

const - пометка для того, чтобы не менять поля объекта
mutable (для поля или метода) - можно менять поля даже если класс помечен как const

-----------------------------------------------------

Указатели

int *a; <=> а является указателем на инт;

битность системы - сколько за раз проц может обрабатывать байт (32битные системы могут обрабатывать максимум 4гига оперативы, почти все - 64бит)

int b = *a; <=> в b положить объект, находящихся по адресу a
int *c = &a; <=> в c положить АДРЕС объекта а

struct A() {
  void str() {

  };
  int val;
}
int main() {
  A * a; - в а хранится указатель на структуру A
  a->str(); - обращение к методам и полям

};

стек - выделение памяти обычное, все удаляется после выхода из скоупа={}
куча - хранилище, временем существования которых управляем мы

--------------------------------------------------
Ссылки
Ссылка неизменяема.
Ccылка примерно равна второму имени одной и той же переменной;

это модификатор доступа именно к объекту

Указатель на константуэто модификатор доступа именно к объекту

ЕСЛИ КОНСТ СЛЕВА - это модификатор доступа именно к объекту
ЕСЛИ СПРАВА - это модификатор доступа к ссылке или указателю

T *
T &
const T *
const T &
T * const
T & const
T const *
T const &

удаление ссылки НЕ УДАЛЯЕТ объект
